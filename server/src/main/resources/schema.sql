DROP TABLE IF EXISTS booking CASCADE;
DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS users CASCADE;

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  description TEXT NOT NULL,
  requestor_id BIGINT NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_request_user FOREIGN KEY (requestor_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items
    (id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    available BOOLEAN NOT NULL DEFAULT TRUE,
    owner_id BIGINT,
    request_id BIGINT,
    CONSTRAINT fk_item_user FOREIGN KEY (owner_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_item_request FOREIGN KEY (request_id) REFERENCES requests(id) ON DELETE SET NULL
 );

 CREATE TABLE IF NOT EXISTS booking (
   id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   start_lease TIMESTAMP WITHOUT TIME ZONE NOT NULL,
   end_lease TIMESTAMP WITHOUT TIME ZONE NOT NULL,
   item_id BIGINT NOT NULL,
   booker_id BIGINT NOT NULL,
   status VARCHAR(9) NOT NULL DEFAULT 'WAITING' CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED')),
   CONSTRAINT fk_booking_item FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE,
   CONSTRAINT fk_booking_user FOREIGN KEY (booker_id) REFERENCES users(id) ON DELETE CASCADE,
   CONSTRAINT chk_booking_dates CHECK (end_lease > start_lease)
 );

 CREATE TABLE IF NOT EXISTS comments (
   id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   text TEXT NOT NULL,
   created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
   item_id BIGINT NOT NULL,
   author_id BIGINT NOT NULL,
   CONSTRAINT fk_comment_item FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE,
   CONSTRAINT fk_comment_author FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE
   );

CREATE INDEX idx_items_owner_id ON items(owner_id);
CREATE INDEX idx_items_request_id ON items(request_id);
CREATE INDEX idx_requests_requestor_id ON requests(requestor_id);
CREATE INDEX idx_booking_booker_id ON booking(booker_id);
CREATE INDEX idx_booking_item_id ON booking(item_id);
CREATE INDEX idx_comments_item_id ON comments(item_id);
CREATE INDEX idx_comments_author_id ON comments(author_id);